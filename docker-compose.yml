version: '2.4'

services:
  myapp:
    build:
      context: .
      dockerfile: Dockerfile.httpserver
    container_name: myapp-container
    ports:
      - "8000:8000"
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: scheduler-container
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db

  db:
    image: docker.io/library/postgres:16-alpine
    container_name: myapp-postgres
    environment:
      - POSTGRES_DB=${DATABASE_DB}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "12345:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d

  pgadmin:
    image: docker.io/dpage/pgadmin4
    container_name: myapp-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "12346:80"
    depends_on:
      - db

  myinit:
    build:
      context: .
      dockerfile: collect/Dockerfile
    container_name: myapp-init
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db

volumes:
  postgres-data:
